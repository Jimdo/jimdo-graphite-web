Index: graphite-web/webapp/graphite/events/views.py
===================================================================
--- graphite-web.orig/webapp/graphite/events/views.py	2012-02-22 14:42:40.000000000 +0100
+++ graphite-web/webapp/graphite/events/views.py	2012-02-22 15:04:54.000000000 +0100
@@ -1,7 +1,10 @@
 import datetime
 import time
 
-import simplejson
+try:
+  import json
+except ImportError:
+  import simplejson as json
 
 from django.http import HttpResponse
 from django.shortcuts import render_to_response, get_object_or_404
@@ -14,11 +17,11 @@
     return time.mktime(dt.timetuple())
 
 
-class EventEncoder(simplejson.JSONEncoder):
+class EventEncoder(json.JSONEncoder):
     def default(self, obj):
         if isinstance(obj, datetime.datetime):
             return to_timestamp(obj)
-        return simplejson.JSONEncoder.default(self, obj)
+        return json.JSONEncoder.default(self, obj)
 
 
 def view_events(request):
@@ -36,7 +39,7 @@
 
 def post_event(request):
     if request.method == 'POST':
-        event = simplejson.loads(request.raw_post_data)
+        event = json.loads(request.raw_post_data)
         assert isinstance(event, dict)
 
         values = {}
@@ -55,7 +58,7 @@
         return HttpResponse(status=405)
 
 def get_data(request):
-    return HttpResponse(simplejson.dumps(fetch(request), cls=EventEncoder),
+    return HttpResponse(json.dumps(fetch(request), cls=EventEncoder),
                         mimetype="application/json")
 
 def fetch(request):
Index: graphite-web/webapp/graphite/graphlot/views.py
===================================================================
--- graphite-web.orig/webapp/graphite/graphlot/views.py	2012-02-22 14:42:40.000000000 +0100
+++ graphite-web/webapp/graphite/graphlot/views.py	2012-02-22 15:05:14.000000000 +0100
@@ -3,7 +3,10 @@
 from django.shortcuts import render_to_response
 from django.http import HttpResponse, Http404, HttpResponseBadRequest
 from django.conf import settings
-import simplejson
+try:
+  import json
+except ImportError:
+  import simplejson as json
 
 from graphite.render.views import parseOptions
 from graphite.render.evaluator import evaluateTarget
@@ -45,7 +48,7 @@
             ) for timeseries in seriesList ]
     if not result:
         raise Http404
-    return HttpResponse(simplejson.dumps(result), mimetype="application/json")
+    return HttpResponse(json.dumps(result), mimetype="application/json")
 
 
 def find_metric(request):
